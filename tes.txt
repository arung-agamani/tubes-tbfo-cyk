S -> S S
S -> COM IM
S -> IM COM
S -> METHOD COM
S -> COM METHOD
S -> COM
S -> IM
S -> METHOD
S -> WITH
COM -> 'COMMENT'
IM -> 'FROM' A
IM -> B
A -> IDENTIFIER B
B -> 'IMPORT' C
C -> IDENTIFIER D
C -> IDENTIFIER
D -> 'AS' E
E -> IDENTIFIER
IDENTIFIER -> 'IDENTIFIER' WITH_METHOD
IDENTIFIER -> 'IDENTIFIER'
WITH_METHOD -> 'WITH_METHOD' IDENTIFIER


PRINT_METHOD -> PRINT M1
M1 -> LP M2

M2 -> STR M99
M2 -> STRING M8
M2 -> FLOAT M3
M2 -> INTEGER M3

M99 -> LP M5

M5 -> FLOAT M3
M5 -> INTEGER M3
M5 -> STRING M3

M8 -> PLUS M3
M8 -> MULTIPLY M3
M8 -> COMA M3

ML -> EQUALS ML1
ML1 -> STRING M8

M3 -> PLUS M5
M3 -> MINUS M5
M3 -> MULTIPLY M5
M3 -> DIVIDE M5
M3 -> POWER M5
M3 -> COMA M5
M3 -> STR M99
M3 -> IDENTIFIER ML
M3 -> RP M2
M3 -> RP

LP -> 'LP'
RP -> 'RP'


PLUS -> 'PLUS'
MINUS -> 'MINUS'
DIVIDE -> 'DIVIDE'
MULTIPLY -> 'MULTIPLY'
POWER -> 'POWER'

PRINT -> 'PRINT'
PLUS -> 'PLUS'
COMA -> 'COMA'
CLASS -> 'CLASS' WITH_METHOD
FUNC -> 'FUNC'
STRING -> 'STR'
NUMBER -> 'NUMBER'

IFELSE -> IF EXPRESSION SEMICOLON IFNEXT
IFNEXT -> CONTENT
IFNEXT -> CONTENT ELIF EXPRESSION SEMICOLON IFNEXT
IFNEXT -> CONTENT ELSE SEMICOLON CONTENT

EXPRESSION -> IDENTIFIER COMPARE_OP IDENTIFIER
EXPRESSION -> NOT IDENTIFIER
EXPRESSION -> NOT EXPRESSION
EXPRESSION -> EXPRESSION BINARY_OP EXPRESSION
EXPRESSION -> LP EXPRESSION RP
COMPARE_OP -> '=='
COMPARE_OP -> '>='
COMPARE_OP -> '<='
COMPARE_OP -> '!='
COMPARE_OP -> '>'
COMPARE_OP -> '<'
BINARY_OP -> 'and'
BINARY_OP -> 'or'
NOT -> 'not'

// for i in _array:                      x
// for i in range(integer):              x
// for i in range(len(_array)):          x
// for i in range(_start, _end):         x
// for i in range(_start, _end, _step):  x

list_of_lists = [ [1, 2, 3], [4, 5, 6], [7, 8, 9]]
for list in list_of_lists:
    for x in list:

FOR_METHOD -> FOR F1
F1 -> IDENTIFIER F2
F2 -> IN F3
F3 -> IDENTIFIER COLON
F3 -> RANGE F4
F4 -> LP F5
F5 -> IDENTIFIER F10
F5 -> IDENTIFIER F6
F5 -> LEN F6
F5 -> IDENTIFIER F10
F6 -> COMA F7
F6 -> LP F7
F7 -> IDENTIFIER F8
F7 -> IDENTIFIER F10
F8 -> COMA F9
F8 -> RP F10
F9 -> IDENTIFIER F10
F10 -> RP COLON
FOR -> 'FOR'
IN -> 'IN'
RANGE -> 'RANGE'
LEN -> 'LEN'
COLON -> 'COLON'

WHILE_METHOD -> WHILE W1
W1 -> IDENTIFIER COlON
W1 -> EXPRESSION COLON
W1 -> LP W2
W2 -> IDENTIFIER W3
W2 -> EXPRESSION W3
W3 -> RP COlON
WHILE -> 'WHILE'
WHILE_METHOD -> WHILE W1
W1 -> IDENTIFIER COlON
W1 -> EXPRESSION COLON
W1 -> LP W2
W2 -> IDENTIFIER W3
W2 -> EXPRESSION W3
W3 -> RP COlON
WHILE -> 'WHILE'
WHILE_METHOD -> WHILE W1
W1 -> IDENTIFIER COlON
W1 -> EXPRESSION COLON
W1 -> LP W2
W2 -> IDENTIFIER W3
W2 -> EXPRESSION W3
W3 -> RP COlON
WHILE -> 'WHILE'
WHILE_METHOD -> WHILE W1
W1 -> IDENTIFIER COlON
W1 -> EXPRESSION COLON
W1 -> LP W2
W2 -> IDENTIFIER W3
W2 -> EXPRESSION W3
W3 -> RP COlON
WHILE -> 'WHILE'
WHILE_METHOD -> WHILE W1
W1 -> IDENTIFIER COlON
W1 -> EXPRESSION COLON
W1 -> LP W2
W2 -> IDENTIFIER W3
W2 -> EXPRESSION W3
W3 -> RP COlON
WHILE -> 'WHILE'
WHILE_METHOD -> WHILE W1
W1 -> IDENTIFIER COlON
W1 -> EXPRESSION COLON
W1 -> LP W2
W2 -> IDENTIFIER W3
W2 -> EXPRESSION W3
W3 -> RP COlON
WHILE -> 'WHILE'



DEF_METHOD -> DEF D1
D1 -> IDENTIFIER D2

D2 -> COLON
D2 -> LP D3

D3 -> IDENTIFIER
WHILE_METHOD -> WHILE W1
W1 -> IDENTIFIER COlON
W1 -> EXPRESSION COLON
W1 -> LP W2
W2 -> IDENTIFIER W3
W2 -> EXPRESSION W3
W3 -> RP COlON
WHILE -> 'WHILE'





PRINT_METHOD -> PRINT M1
M1 -> LP M2
M2 -> STRING MS
M2 -> FLOAT MF
M2 -> INTEGER MI
MS -> RP
MS -> PLUS MPLUSSTRING
MS -> MULTIPLY MMULTIPLYINTEGER
MS -> COMA M2
MMULTIPLYINTEGER -> INTEGER MS
MPLUSSTRING -> STRING MS
MF -> RP
MF -> COMA M2
MF -> PLUS MNUMBER
MF -> MULTIPLY MNUMBER
MF -> MINUS MNUMBER
MF -> DIVIDE MNUMBER
MF -> POWER MNUMBER
MI -> RP
MI -> COMA M2
MI -> PLUS MNUMBER
MI -> MULTIPLY M2
MI -> MINUS MNUMBER
MI -> DIVIDE MNUMBER
MI -> POWER MNUMBER
MNUMBER -> INTEGER MF
MNUMBER -> INTEGER MI
MNUMBER -> FLOAT MF
MNUMBER -> FLOAT MI
