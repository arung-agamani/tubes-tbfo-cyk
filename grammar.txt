S -> S S
S -> COM IM
S -> IM COM
S -> METHOD COM
S -> COM METHOD
S -> COM
S -> IM
S -> METHOD
S -> FOR_METHOD
S -> PRINT_METHOD
S -> IFELSE
S -> WHILE_METHOD
COM -> COMS NEWLINE
COM -> COMS
COMS -> 'COMMENT'
IM -> 'FROM' A
IM -> B
A -> IDENTIFIER B
B -> 'IMPORT' C
C -> IDENTIFIER D
C -> IDENTIFIER
D -> 'AS' E
E -> IDENTIFIER IMEND
E -> IDENTIFIER
IMEND -> NEWLINE
IDENTIFIER -> 'IDENTIFIER' WITH_METHOD
IDENTIFIER -> 'IDENTIFIER'
IDENTIFIER -> 'NUMBER'
IDENTIFIER -> 'TRUE'
IDENTIFIER -> 'FALSE'
WITH_METHOD -> 'WITH_METHOD' IDENTIFIER
PRINT_METHOD -> PRINT M1
M1 -> LP M2
M2 -> STR M99
M2 -> STRING M8
M2 -> FLOAT M3
M2 -> INTEGER M3
M99 -> LP M5
M5 -> FLOAT M3
M5 -> INTEGER M3
M5 -> STRING M3
M5 -> IDENTIFIER M3
M8 -> PLUS M3
M8 -> MULTIPLY M3
M8 -> COMA M3
M8 -> RP
ML -> EQUALS ML1
ML1 -> STRING M8
M3 -> PLUS M5
M3 -> MINUS M5
M3 -> MULTIPLY M5
M3 -> DIVIDE M5
M3 -> POWER M5
M3 -> COMA M5
M3 -> STR M99
M3 -> IDENTIFIER ML
M3 -> RP M2
M3 -> RP
LP -> 'LP'
RP -> 'RP'
PRINT -> 'PRINT'
STR -> 'STR'
PLUS -> 'PLUS'
COMA -> 'COMA'
CLASS -> 'CLASS' WITH_METHOD
FUNC -> 'FUNC'
STRING -> 'STRING'
INTEGER -> 'INT'
FLOAT -> 'FLOAT'
FOR_METHOD -> FOR F1
F1 -> IDENTIFIER F2
F2 -> IN F3
F3 -> IDENTIFIER COLON
F3 -> RANGE F4
F4 -> LP F5
F5 -> IDENTIFIER F10
F5 -> IDENTIFIER F6
F5 -> LEN F6
F5 -> IDENTIFIER F10
F6 -> COMA F7
F6 -> LP F7
F7 -> IDENTIFIER F8
F7 -> IDENTIFIER F10
F8 -> COMA F9
F8 -> RP F10
F9 -> IDENTIFIER F10
F10 -> RP COLON
FOR -> 'FOR'
IN -> 'IN'
LEN -> 'LEN'
RANGE -> 'RANGE'
COLON -> 'COLON'
IFELSE -> IF IF2
IFELSE -> IF4
IFELSE -> IF7
IF2 -> EXPRESSION IF3
IF3 -> COLON IFNL
IF3 -> COLON
IFNL -> NEWLINE IFNEXT
IFNEXT -> CONTENT
IF4 -> ELIFTOK IF99
IF99 -> ELIF IF5
IF5 -> EXPRESSION IF6
IF6 -> COLON IFNL
IF6 -> COLON
IF7 -> ELIFTOK IF98
IF98 -> ELSE IF8
IF8 -> COLON IF9
IF8 -> COLON
IF9 -> NEWLINE IF10
IF9 -> IF10
IF10 -> CONTENT
IF -> 'IF'
ELSE -> 'ELSE'
ELIF -> 'ELIF'
ELIFTOK -> 'ELIFTOK'
CONTENT -> S
EXPRESSION -> IDENTIFIER A
A -> COMPARE_OP IDENTIFIER
EXPRESSION -> NOT IDENTIFIER
EXPRESSION -> NOT EXPRESSION
EXPRESSION -> IDENTIFIER
EXPRESSION -> EXPRESSION B
B -> BINARY_OP EXPRESSION
EXPRESSION -> LP C
C -> EXPRESSION RP
COMPARE_OP -> 'DOUBLEEQUAL'
COMPARE_OP -> 'GREATER_OR_EQUAL_THAN'
COMPARE_OP -> 'LESS_OR_EQUAL_THAN'
COMPARE_OP -> 'GREATER_THAN'
COMPARE_OP -> 'LESS_THAN'
BINARY_OP -> 'AND'
BINARY_OP -> 'OR'
NOT -> 'NOT'
IDENTIFIER -> 'IDENTIFIER'
LP -> 'LP'
RP -> 'RP'
WHILE_METHOD -> WHILE W1
W1 -> IDENTIFIER W4
W1 -> EXPRESSION W4
W1 -> LP W2
W2 -> IDENTIFIER W3
W2 -> EXPRESSION W3
W3 -> RP W4
W4 -> COLON NEWLINE
W4 -> COLON
WHILE -> 'WHILE'
NEWLINE -> 'NEWLINE'